---
title: "Selections"
---

```{r, include = FALSE}
library(readxl)
library(dplyr)
library(kableExtra)

# players names


names <- c("Drew", "Bob", "Curran", "Sully", "Ray", "Shaw", 
           "Coady", "Pa", "Hanley")

# selections ---------------------------------------------------------------
full_selections <- data.frame("Home Team" = NA, "Away Team" = NA, 
                              "Prediction" = NA, "Result" = NA, "order" = NA,
                              "Points" = NA)

full_standings <- data.frame("Group" = NA, "Winner" = NA, "Runner-up" = NA,
                             "3rd" = NA, "4th" = NA)

for (name in names) {
  my_data <- read_excel("files/Wolfpack World Cup Predictor 2022.xlsm", 
                        sheet = name, col_names = FALSE)
  
  # knockouts ---------------------------------------------------------
  
  R16 <- my_data[c(3, 8, 13, 18, 23, 28, 33, 38), c(13, 14)]
  
  R16$Prediction <- ifelse(is.na(my_data[c(4, 9, 14, 19, 24, 29, 34, 39), 13]),
                           "Away Win", "Home Win")
  
  R16$Game <- c(49:56)
  R16$Stage <- rep("R16", 8)
  
  QF <- my_data[c(5, 15, 25, 35), c(17, 18)]
  
  QF$Prediction <- ifelse(is.na(my_data[c(6, 16, 26, 36), 17]),
                          "Away Win", "Home Win")
  
  QF$Game <- c(57:60)
  QF$Stage <- rep("QF", 4)
  
  
  SF <- my_data[c(10, 30), c(21, 22)]
  
  SF$Prediction <- ifelse(is.na(my_data[c(11, 31), 21]),
                          "Away Win", "Home Win")
  
  SF$Game <- c(61, 62)
  SF$Stage <- rep("SF", 2)
  
  F_TP <- my_data[c(15, 25), c(25, 26)]
  
  F_TP$Prediction <- ifelse(is.na(my_data[c(16, 26), 25]),
                            "Away Win", "Home Win")
  
  F_TP$Game <- c(64, 63)
  F_TP$Stage <- c("F", "TP")
  
  colnames(R16) <- colnames(QF) <- colnames(SF) <- colnames(F_TP) <-
    c("Home Team", "Away Team", "Prediction", "order", "Stage")
  
  knockouts <- rbind(R16, QF, SF, F_TP)
  
  knockouts$`Home Team`[knockouts$`Home Team`
                        == "Netrherlands"] = "Netherlands"
  
  knockouts$`Home Team`[knockouts$`Home Team`
                        == "Crotia"] = "Croatia"
  
  knockouts$`Home Team`[knockouts$`Home Team`
                        == "IR Iran"] = "Iran"
  
  knockouts$`Home Team`[knockouts$`Home Team`
                        == "Tunsia"] = "Tunisia"
  
  knockouts$`Home Team`[knockouts$`Home Team`
                        == "Switzgerald"] = "Switzerland"
  
  
  
  
  knockouts$`Away Team`[knockouts$`Away Team`
                        == "Netrherlands"] = "Netherlands"
  
  knockouts$`Away Team`[knockouts$`Away Team`
                        == "Crotia"] = "Croatia"
  
  knockouts$`Away Team`[knockouts$`Away Team`
                        == "IR Iran"] = "Iran"
  
  knockouts$`Away Team`[knockouts$`Away Team`
                        == "Tunsia"] = "Tunisia"
  
  knockouts$`Away Team`[knockouts$`Away Team`
                        == "Switzgerald"] = "Switzerland"
  
  knockouts$Result <- NA
  knockouts$Points <- NA
  
  knockouts <- knockouts[order(knockouts$order), c(1:3, 6, 4, 7)]
  
  knockouts_sel <- knockouts[order(knockouts$order), c(1:4, 6)]
  
  assign(paste0(name, "_knockouts"), knockouts_sel)
  
  # group match  ------------------------------------------------------
  
  
  group_selections <- my_data[, 1:8]
  
  remove_ind <- c(1:2, sapply(1:7, \(x) (9 * x):((9 * x) + 2)), 72:73)
  
  group_selections <- group_selections[-remove_ind, ]
  
  group_selections[, 9] <- ifelse(
    !is.na(group_selections[, 2]), "Home Win (+2)", 
    ifelse(!is.na(group_selections[, 3]), "Home Win",
           ifelse(!is.na(group_selections[, 4]), "Draw",
                  ifelse(!is.na(group_selections[, 5]), "Away Win",
                         ifelse(!is.na(group_selections[, 6]), "Away Win (+2)",
                                "NA"
                         )))))
  
  group_selections <- group_selections[, c(1, 7, 9)]
  
  colnames(group_selections) <- c("Home Team", "Away Team", "Prediction")
  
  group_selections$`Home Team`[group_selections$`Home Team`
                               == "Netrherlands"] = "Netherlands"
  
  group_selections$`Home Team`[group_selections$`Home Team`
                               == "Crotia"] = "Croatia"
  
  group_selections$`Home Team`[group_selections$`Home Team`
                               == "IR Iran"] = "Iran"
  
  group_selections$`Home Team`[group_selections$`Home Team`
                               == "Tunsia"] = "Tunisia"
  
  group_selections$`Home Team`[group_selections$`Home Team`
                               == "Switzgerald"] = "Switzerland"
  
  
  
  
  group_selections$`Away Team`[group_selections$`Away Team`
                               == "Netrherlands"] = "Netherlands"
  
  group_selections$`Away Team`[group_selections$`Away Team`
                               == "Crotia"] = "Croatia"
  
  group_selections$`Away Team`[group_selections$`Away Team`
                               == "IR Iran"] = "Iran"
  
  group_selections$`Away Team`[group_selections$`Away Team`
                               == "Tunsia"] = "Tunisia"
  
  group_selections$`Away Team`[group_selections$`Away Team`
                               == "Switzgerald"] = "Switzerland"
  
  fixtures_results <- read.csv("files/fixtures-results.csv")
  
  
  df <- left_join(fixtures_results, group_selections, by = c("Home.Team" = "Home Team",
                                                             "Away.Team" = "Away Team"))
  df$order <- 1:nrow(df)
  
  df$Result <- ifelse(
    df$Home.Score > df$Away.Score + 1, "Home Win (+2)",
    ifelse(df$Home.Score + 1 < df$Away.Score, "Away Win (+2)",
           ifelse(df$Home.Score > df$Away.Score, "Home Win",
                  ifelse(df$Home.Score < df$Away.Score, "Away Win",
                         ifelse(df$Home.Score == df$Away.Score, "Draw", 
                                "NA")))))
  
  group_selections <- left_join(group_selections, 
                                df[, c("Home.Team", "Away.Team", "Result", "order")],
                                by = c("Home Team" = "Home.Team",
                                       "Away Team" = "Away.Team"))
  
  group_selections$Points <- ifelse(
    (group_selections$Prediction == group_selections$Result) & (group_selections$Prediction == "Home Win (+2)" | group_selections$Prediction == "Away Win (+2)"), 2, 
    ifelse(group_selections$Prediction == group_selections$Result, 1, 
           ifelse((group_selections$Prediction == "Home Win" & group_selections$Result == "Home Win (+2)") | 
                    (group_selections$Prediction == "Away Win" & group_selections$Result == "Away Win (+2)"), 1,
                  ifelse((group_selections$Prediction == "Home Win (+2)" & group_selections$Result == "Home Win") | 
                           (group_selections$Prediction == "Away Win (+2)" & group_selections$Result == "Away Win"), 0,
                         ifelse(group_selections$Prediction == "Home Win (+2)" | group_selections$Prediction == "Away Win (+2)", -1, 0
                         )))))
  
  colnames(full_selections) <- colnames(group_selections)
  full_selections <- rbind(full_selections, group_selections, knockouts)
  
  
  group_selections <- group_selections[order(group_selections$order), c(1:4, 6)]
  
  
  assign(paste0(name, "_selection_gm"), group_selections)
  
  
  
  
  # group rank points -------------------------------------------------------
  
  group_standings <- my_data[-c(1:2, 7:11, 16:20, 25:29, 34:38, 43:47,
                                52:56, 61:65, 70:73), 9:10]
  colnames(group_standings) <- c("Position", "Team")
  group_standings$Group <- rep(c("A", "B", "C", "D", "E", "F", "G", "H"),
                               each = 4)
  
  group_standings$Team[group_standings$Team
                               == "Crotia"] = "Croatia"
  
  group_standings$Team[group_standings$Team
                               == "IR Iran"] = "Iran"
  
  group_standings$Team[group_standings$Team
                               == "Cost Rica"] = "Costa Rica"
  
  
  
  
  wide_group <- tidyr::spread(group_standings, Position, Team)[, c(1, 5, 4, 2, 3)]
  
  colnames(full_standings) <- colnames(wide_group)
  
  full_standings <- rbind(full_standings, wide_group)
  
  assign(paste0(name, "_selection_gs"), group_standings)
}



full_selections$Player <- c(NA, rep(names, each = 64))
full_selections <- full_selections[-1, ]
full_selections <- full_selections[order(full_selections$order), ]

full_selections$Stage <- c(rep("Group", 48*length(names)),
                           rep("Round of 16", 8*length(names)),
                           rep("Quarter Final", 4*length(names)),
                           rep("Semi Final", 2*length(names)),
                           rep("3rd Place Playoff", length(names)),
                           rep("Final", length(names)))

full_selections$Game <- paste0(full_selections$`Home Team`, " v ",
                               full_selections$`Away Team`)

full_selections$Game[full_selections$order > 48] <- paste0(
  full_selections$Stage[full_selections$order > 48], " (Game ",
  full_selections$order[full_selections$order > 48], ")")



full_selections_result <- full_selections[!is.na(full_selections$Result),
                                          c(7, 1:4, 6, 9, 5)]


full_selections_fixtures <- full_selections[is.na(full_selections$Result),
                                            c(7, 1:3, 8, 5, 9)]

full_standings$Player <- c(NA, rep(names, each = 8))
full_standings <- full_standings[-1, ]
full_standings <- full_standings[order(full_standings$Group), ]

```

## Selections {.tabset}

::: panel-tabset
## Drew

::: panel-tabset
## Matches

```{r echo=FALSE}
Drew_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_selection_gm$Points == -1),  background = "red")

```

## Group Table

```{r echo=FALSE}
Drew_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```


## Knockout Matches

```{r echo=FALSE}
Drew_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::

## Bob
::: panel-tabset
## Matches

```{r echo=FALSE}
Bob_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Bob_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Bob_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Bob_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Bob_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Bob_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Bob_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```
:::

## Curran
::: panel-tabset
## Matches

```{r echo=FALSE}
Curran_selection_gm %>%
  kbl() %>%
  kable_styling()%>% 
  row_spec(which(Curran_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Curran_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Curran_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Curran_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Curran_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Curran_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::

## Sully
::: panel-tabset
## Matches

```{r echo=FALSE}
Sully_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Sully_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Sully_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Sully_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Sully_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Sully_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Sully_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::

## Ray
::: panel-tabset
## Matches

```{r echo=FALSE}
Ray_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Ray_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Ray_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Ray_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Ray_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Ray_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Ray_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::


## Shaw
::: panel-tabset
## Matches

```{r echo=FALSE}
Shaw_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Shaw_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Shaw_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Shaw_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Shaw_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Shaw_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Shaw_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::


## Coady
::: panel-tabset
## Matches

```{r echo=FALSE}
Coady_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Coady_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Coady_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Coady_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Coady_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Coady_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Coady_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::


## Pa
::: panel-tabset
## Matches

```{r echo=FALSE}
Pa_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Pa_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Pa_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Pa_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Pa_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Pa_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Pa_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::

## Hanley
::: panel-tabset
## Matches

```{r echo=FALSE}
Hanley_selection_gm %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Hanley_selection_gm$Points == 2),  background = "green") %>% 
  row_spec(which(Hanley_selection_gm$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Hanley_selection_gm$Points == 0),  background = "yellow") %>% 
  row_spec(which(Hanley_selection_gm$Points == -1),  background = "red")
```

## Group Table

```{r echo=FALSE}

Hanley_selection_gs[, c(2, 1)] %>%
  kbl() %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 4) %>%
  pack_rows("Group B", 5, 8) %>%
  pack_rows("Group C", 9, 12) %>%
  pack_rows("Group D", 13, 16) %>%
  pack_rows("Group E", 17, 20) %>%
  pack_rows("Group F", 21, 24) %>%
  pack_rows("Group G", 25, 28) %>%
  pack_rows("Group H", 29, 32)
```

## Knockout Matches

```{r echo=FALSE}
Hanley_knockouts %>%
  kbl() %>%
  kable_styling() %>% 
  row_spec(which(Drew_knockouts$Points == 2),  background = "green") %>% 
  row_spec(which(Drew_knockouts$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(Drew_knockouts$Points == 0),  background = "yellow") %>% 
  row_spec(which(Drew_knockouts$Points == -1),  background = "red") %>%
  pack_rows("Round of 16", 1, 8)%>%
  pack_rows("Quarter Finals", 9, 12)%>%
  pack_rows("Semi Finals", 13, 14)%>%
  pack_rows("3rd Place Playoff", 15, 15)%>%
  pack_rows("Final", 16, 16)
```

:::

## Full (Results)

```{r echo=FALSE}
full_selections_result <- full_selections_result  %>%
  arrange(desc(order))

full_selections_result  %>%
  select("Player", "Prediction", "Result", "Points") %>% 
  kbl(row.names = FALSE) %>%
  kable_styling() %>%
  pack_rows(index = 
              table(gsub("[1-9].*", "", full_selections_result$Game))[order(
                order(unique(cbind(full_selections_result$Game,
                                   full_selections_result$order))[, 1]),
                decreasing = FALSE)]) %>% 
  row_spec(which(full_selections_result$Points == 2),  background = "green") %>% 
  row_spec(which(full_selections_result$Points == 1),  background = "lightgreen") %>% 
  row_spec(which(full_selections_result$Points == 0),  background = "yellow") %>% 
  row_spec(which(full_selections_result$Points == -1),  background = "red")

```


## Full (Fixtures)

```{r echo=FALSE}
full_selections_fixtures  %>%
  select("Player", "Prediction", "Home Team", "Away Team") %>% 
  kbl(row.names = FALSE) %>%
  kable_styling() %>%
  pack_rows(index = 
              table(gsub("", "", full_selections_fixtures$Game))[order(
                order(unique(cbind(full_selections_fixtures$Game,
                                   full_selections_fixtures$order))[, 1]))])
```


## Full (Standings)

```{r echo=FALSE}
full_standings[, c(6, 2, 3, 4, 5)]  %>%
  kbl(row.names = FALSE) %>%
  kable_styling() %>%
  pack_rows("Group A", 1, 9) %>%
  pack_rows("Group B", 10, 18) %>%
  pack_rows("Group C", 19, 27) %>%
  pack_rows("Group D", 28, 36) %>%
  pack_rows("Group E", 37, 45) %>%
  pack_rows("Group F", 46, 54) %>%
  pack_rows("Group G", 55, 63) %>%
  pack_rows("Group H", 64, 72)
```


:::
